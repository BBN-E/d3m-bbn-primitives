{
    "context": "TESTING",
    "created": "2018-04-30T17:06:12.653896Z",
    "id": "ced7f0ca-2c1b-426c-959c-09991811c2c5",
    "inputs": [
        {
            "name": "input dataset"
        }
    ],
    "outputs": [
        {
            "data": "steps.14.produce",
            "name": "output predictions"
        }
    ],
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "steps": [
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "read_as_mono": {
                    "data": true,
                    "type": "VALUE"
                },
                "resampling_rate": {
                    "data": 16000.0,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "c718ad514dc088b5d5cb1eb6ca6f8f93c6db3ebdab04931fac1f388d67e50ab3",
                "id": "503e69a1-5fc4-4f14-912a-4b564cb1b171",
                "name": "Audio Reader",
                "python_path": "d3m.primitives.bbn.time_series.AudioReader",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "35afd4db-e11d-4e2d-a780-9e123b752bd7",
                "name": "Channel Averager",
                "python_path": "d3m.primitives.bbn.time_series.ChannelAverager",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.1.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "level": {
                    "data": 0.0001,
                    "type": "VALUE"
                },
                "reseed": {
                    "data": true,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "1ea935ec-e767-4a18-bbd5-b5f66855f4f3",
                "name": "Signal Dithering",
                "python_path": "d3m.primitives.bbn.time_series.SignalDither",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "flatten_output": {
                    "data": false,
                    "type": "VALUE"
                },
                "frame_length_s": {
                    "data": 0.025,
                    "type": "VALUE"
                },
                "frame_shift_s": {
                    "data": 0.01,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "4d7160ef-ca70-4150-b513-36b90817ba45",
                "name": "Signal Dithering",
                "python_path": "d3m.primitives.bbn.time_series.SignalFramer",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.3.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "cep_lifter": {
                    "data": 22.0,
                    "type": "VALUE"
                },
                "frame_mean_norm": {
                    "data": false,
                    "type": "VALUE"
                },
                "nfft": {
                    "data": "gANOLg==",
                    "type": "VALUE"
                },
                "num_ceps": {
                    "data": 3,
                    "type": "VALUE"
                },
                "num_chans": {
                    "data": 20,
                    "type": "VALUE"
                },
                "preemcoef": {
                    "data": "gANOLg==",
                    "type": "VALUE"
                },
                "use_power": {
                    "data": false,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "a184a1d1-3187-4d1f-99c6-e1d5665c2c99",
                "name": "MFCC Feature Extraction",
                "python_path": "d3m.primitives.bbn.time_series.SignalMFCC",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.4.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "seg_len": {
                    "data": 10,
                    "type": "VALUE"
                },
                "seg_shift": {
                    "data": "gANOLg==",
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "2a6f820a-3943-4bb7-a580-689a91c338f3",
                "name": "Uniform Segmentation",
                "python_path": "d3m.primitives.bbn.time_series.UniformSegmentation",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.5.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "deg": {
                    "data": 2,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "7c1d88a3-2388-4ba8-97c6-aa0aa2673024",
                "name": "Segment Curve Fitter",
                "python_path": "d3m.primitives.bbn.time_series.SegmentCurveFitter",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.6.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "max_iter": {
                    "data": 300,
                    "type": "VALUE"
                },
                "n_clusters": {
                    "data": 512,
                    "type": "VALUE"
                },
                "n_init": {
                    "data": 10,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "b358a1fd-8bf8-4991-935f-2f1806dae54d",
                "name": "Clustering for Curve Fitting",
                "python_path": "d3m.primitives.bbn.time_series.ClusterCurveFittingKMeans",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.7.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "flatten_output": {
                    "data": false,
                    "type": "VALUE"
                },
                "frame_length_s": {
                    "data": 1,
                    "type": "VALUE"
                },
                "frame_shift_s": {
                    "data": 1,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "4d7160ef-ca70-4150-b513-36b90817ba45",
                "name": "Signal Dithering",
                "python_path": "d3m.primitives.bbn.time_series.SignalFramer",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.8.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "bdcceba0-b6bd-4611-92de-225e3353f07d",
                "name": "Sequence to Bag-of-Tokens transformer",
                "python_path": "d3m.primitives.bbn.time_series.SequenceToBagOfTokens",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.9.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "norm": {
                    "data": "l2",
                    "type": "VALUE"
                },
                "smooth_idf": {
                    "data": true,
                    "type": "VALUE"
                },
                "sublinear_tf": {
                    "data": true,
                    "type": "VALUE"
                },
                "use_idf": {
                    "data": true,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "cc61fd867a8604de2d9c77e71a13a861b235fe9ff12f760b0baa7a2971c8cccf",
                "id": "fefcb78f-c2f5-4557-a23b-0910b2127769",
                "name": "Tfidf Transformer",
                "python_path": "d3m.primitives.bbn.time_series.BBNTfidfTransformer",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "inputs.0"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version": "0.2.0",
                "python_path": "d3m.primitives.datasets.Denormalize",
                "name": "Denormalize datasets",
                "digest": "3021c035e53d84de64466eb0fb157fa568f4d752eec322ee52e9966800421120"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.11.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version": "0.2.0",
                "python_path": "d3m.primitives.datasets.DatasetToDataFrame",
                "name": "Dataset to DataFrame converter",
                "digest": "3021c035e53d84de64466eb0fb157fa568f4d752eec322ee52e9966800421120"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "type": "CONTAINER",
                    "data": "steps.12.produce"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "id": "a7feadd5-997f-4302-bd5d-caa86e7bbd4f",
                "version": "0.2.0",
                "python_path": "d3m.primitives.data.ExtractTargets",
                "name": "Extracts target columns",
                "digest": "3021c035e53d84de64466eb0fb157fa568f4d752eec322ee52e9966800421120"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.10.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.13.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "C": {
                    "data": 0.1,
                    "type": "VALUE"
                },
                "class_weight": {
                    "data": "gANYCAAAAGJhbGFuY2VkcQAu",
                    "type": "VALUE"
                },
                "dual": {
                    "data": true,
                    "type": "VALUE"
                },
                "fit_intercept": {
                    "data": true,
                    "type": "VALUE"
                },
                "intercept_scaling": {
                    "data": 1,
                    "type": "VALUE"
                },
                "loss": {
                    "data": "squared_hinge",
                    "type": "VALUE"
                },
                "max_iter": {
                    "data": 1000,
                    "type": "VALUE"
                },
                "multi_class": {
                    "data": "ovr",
                    "type": "VALUE"
                },
                "penalty": {
                    "data": "l2",
                    "type": "VALUE"
                },
                "tol": {
                    "data": 0.0001,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "eea2ac30853eb0b5f08a4c23ca611525ff0f58c985375143f17974b46e59003a",
                "id": "71749b20-80e9-3a8e-998e-25da5bbc1abc",
                "name": "sklearn.svm.classes.LinearSVC",
                "python_path": "d3m.primitives.sklearn_wrap.SKLinearSVC",
                "version": "0.1.0"
            },
            "type": "PRIMITIVE"
        }
    ]
}
