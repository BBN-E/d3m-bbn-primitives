{
    "context": "TESTING",
    "created": "2019-04-26T14:58:37.270782Z",
    "digest": "a145da9d8dee34abf3f0fe7a98d1ea36c7c9bc63c5fab760cb226b2e30f03e6d",
    "id": "203cced2-9774-4622-bdd3-e800f2d58131",
    "inputs": [
        {
            "name": "input dataset"
        }
    ],
    "outputs": [
        {
            "data": "steps.9.produce",
            "name": "output predictions"
        }
    ],
    "pipeline_rank": 1,
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "steps": [
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "2b42b747dd666de548b896eab7cc4ba612942722b292b76c716c62bb193bc24b",
                "id": "952b659c-d290-465b-9e89-160947e29c06",
                "name": "Targets Reader",
                "python_path": "d3m.primitives.bbn.time_series.TargetsReader",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "read_as_mono": {
                    "data": true,
                    "type": "VALUE"
                },
                "resampling_rate": {
                    "data": 16000.0,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "d641c1451a5e32b9e3d194b76786e0633ac1c87fc1991d79766d18480d4e709b",
                "id": "503e69a1-5fc4-4f14-912a-4b564cb1b171",
                "name": "Audio Reader",
                "python_path": "d3m.primitives.bbn.time_series.AudioReader",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.1.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "e28a0b12076fb02fc65b602f77c61f0bb5a58235539fc5aab2f676b474623cae",
                "id": "35afd4db-e11d-4e2d-a780-9e123b752bd7",
                "name": "Channel Averager",
                "python_path": "d3m.primitives.bbn.time_series.ChannelAverager",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "level": {
                    "data": 0.0001,
                    "type": "VALUE"
                },
                "reseed": {
                    "data": true,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "e5a2e45a1c2e5be52d2a35b5b5254ef8390a5240841bb3361ba1ba03dc3b01fe",
                "id": "1ea935ec-e767-4a18-bbd5-b5f66855f4f3",
                "name": "Signal Dithering",
                "python_path": "d3m.primitives.bbn.time_series.SignalDither",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.3.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "flatten_output": {
                    "data": false,
                    "type": "VALUE"
                },
                "frame_length_s": {
                    "data": 0.025,
                    "type": "VALUE"
                },
                "frame_shift_s": {
                    "data": 0.01,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "008c928af3b5c71f818f3b0ca6c5a401d19141a10452da981024ce389d4a2c92",
                "id": "4d7160ef-ca70-4150-b513-36b90817ba45",
                "name": "Signal Framing",
                "python_path": "d3m.primitives.bbn.time_series.SignalFramer",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.4.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "cep_lifter": {
                    "data": 22.0,
                    "type": "VALUE"
                },
                "frame_mean_norm": {
                    "data": false,
                    "type": "VALUE"
                },
                "nfft": {
                    "data": null,
                    "type": "VALUE"
                },
                "num_ceps": {
                    "data": 12,
                    "type": "VALUE"
                },
                "num_chans": {
                    "data": 20,
                    "type": "VALUE"
                },
                "preemcoef": {
                    "data": null,
                    "type": "VALUE"
                },
                "use_power": {
                    "data": false,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "9bd35e487c6c528d974c67050dd9d83fb8f8c2490c9df8222c43207d2ba1f183",
                "id": "a184a1d1-3187-4d1f-99c6-e1d5665c2c99",
                "name": "MFCC Feature Extraction",
                "python_path": "d3m.primitives.bbn.time_series.SignalMFCC",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.5.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "gmm_covariance_type": {
                    "data": "diag",
                    "type": "VALUE"
                },
                "ivec_dim": {
                    "data": 100,
                    "type": "VALUE"
                },
                "ivec_normalize": {
                    "data": true,
                    "type": "VALUE"
                },
                "max_gmm_iter": {
                    "data": 20,
                    "type": "VALUE"
                },
                "num_gauss": {
                    "data": 32,
                    "type": "VALUE"
                },
                "num_ivec_iter": {
                    "data": 7,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "0fcb072a1694db626459a38a01a86152dca8d5d2ffb8cf4779f18e2f1f2c0460",
                "id": "1c5080bd-7b2f-4dbb-ac5f-0a65b59526a7",
                "name": "I-vector extractor",
                "python_path": "d3m.primitives.bbn.time_series.IVectorExtractor",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.6.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "activation": {
                    "data": "relu",
                    "type": "VALUE"
                },
                "add_index_columns": {
                    "data": true,
                    "type": "VALUE"
                },
                "alpha": {
                    "data": 0.0001,
                    "type": "VALUE"
                },
                "beta_1": {
                    "data": 0.9,
                    "type": "VALUE"
                },
                "beta_2": {
                    "data": 0.999,
                    "type": "VALUE"
                },
                "early_stopping": {
                    "data": true,
                    "type": "VALUE"
                },
                "epsilon": {
                    "data": 1e-08,
                    "type": "VALUE"
                },
                "exclude_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "hidden_layer_sizes": {
                    "data": "gANjY29weXJlZwpfcmVjb25zdHJ1Y3RvcgpxAGNkM20uY29udGFpbmVyLmxpc3QKTGlzdApxAWNidWlsdGlucwpsaXN0CnECXXEDKEvIS8hlh3EEUnEFfXEGWAgAAABtZXRhZGF0YXEHY2QzbS5tZXRhZGF0YS5iYXNlCkRhdGFNZXRhZGF0YQpxCCmBcQl9cQooWBEAAABfY3VycmVudF9tZXRhZGF0YXELY2QzbS5tZXRhZGF0YS5iYXNlCk1ldGFkYXRhRW50cnkKcQwpgXENTn1xDihYCAAAAGVsZW1lbnRzcQ9jZDNtLnV0aWxzCnBtYXAKcRB9cRGFcRJScRNYDAAAAGFsbF9lbGVtZW50c3EUTmgHY2Zyb3plbmRpY3QKRnJvemVuT3JkZXJlZERpY3QKcRUpgXEWfXEXKFgFAAAAX2RpY3RxGGNjb2xsZWN0aW9ucwpPcmRlcmVkRGljdApxGSlScRpYBQAAAF9oYXNocRtOdWJYCAAAAGlzX2VtcHR5cRyIWBEAAABpc19lbGVtZW50c19lbXB0eXEdiHWGcR5iaBtOdWJzYi4=",
                    "type": "VALUE"
                },
                "learning_rate": {
                    "data": "constant",
                    "type": "VALUE"
                },
                "learning_rate_init": {
                    "data": 0.01,
                    "type": "VALUE"
                },
                "max_iter": {
                    "data": 200,
                    "type": "VALUE"
                },
                "return_result": {
                    "data": "replace",
                    "type": "VALUE"
                },
                "shuffle": {
                    "data": true,
                    "type": "VALUE"
                },
                "solver": {
                    "data": "adam",
                    "type": "VALUE"
                },
                "tol": {
                    "data": 0.0001,
                    "type": "VALUE"
                },
                "use_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "use_semantic_types": {
                    "data": false,
                    "type": "VALUE"
                },
                "warm_start": {
                    "data": false,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "6dcb62626fd22f63fa0f006506cf81459dffa75482789c8cdec3b211cbd510e6",
                "id": "cdb18166-e2ca-4418-b5a4-fffbe98f7844",
                "name": "BBN MLP Classifier",
                "python_path": "d3m.primitives.bbn.sklearn_wrap.BBNMLPClassifier",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "1e0fc07f5306223300e3966c50daf7a5f2095d201d316b31cdc86e48a5f98b4a",
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "name": "Extract a DataFrame from a Dataset",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.7.produce",
                    "type": "CONTAINER"
                },
                "reference": {
                    "data": "steps.8.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "d62af6fae9ea50a5bf034d13ac67f117b62ff9c06152dcbbfdd5312136a4d80a",
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "name": "Construct pipeline predictions output",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        }
    ]
}
