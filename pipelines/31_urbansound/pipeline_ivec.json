{
    "context": "TESTING",
    "created": "2019-02-18T20:30:04.553412Z",
    "digest": "8831dff4858bd67a08da7282548cc4440bb13122f87898269bbc5b5f7e24f347",
    "id": "3b3c2594-91b3-44cb-b5dd-84ba42bba14c",
    "inputs": [
        {
            "name": "input dataset"
        }
    ], 
    "outputs": [
        {
            "data": "steps.9.produce",
            "name": "output predictions"
        }
    ],
    "pipeline_rank": 1,
    "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "steps": [
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "a8a8c23d89a0963f98a92e08951835c173465135e067e5c962d810d80c0ee290",
                "id": "952b659c-d290-465b-9e89-160947e29c06",
                "name": "Targets Reader",
                "python_path": "d3m.primitives.bbn.time_series.TargetsReader",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "read_as_mono": {
                    "data": true,
                    "type": "VALUE"
                },
                "resampling_rate": {
                    "data": 16000.0,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "7c5fdc68600ab7fcb8303674ffcac0505d33783d3f634087c079233c4017c54c",
                "id": "503e69a1-5fc4-4f14-912a-4b564cb1b171",
                "name": "Audio Reader",
                "python_path": "d3m.primitives.bbn.time_series.AudioReader",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.1.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "42ea91c299884678488ecfcf98c562941a2a4957b3fe7af51b3ebb5d1204786d",
                "id": "35afd4db-e11d-4e2d-a780-9e123b752bd7",
                "name": "Channel Averager",
                "python_path": "d3m.primitives.bbn.time_series.ChannelAverager",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.2.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "level": {
                    "data": 0.0001,
                    "type": "VALUE"
                },
                "reseed": {
                    "data": true,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "f0683abbe88f60d570694ffe7106cdd965a71240f06d7bfcffdf6cbd9ad24642",
                "id": "1ea935ec-e767-4a18-bbd5-b5f66855f4f3",
                "name": "Signal Dithering",
                "python_path": "d3m.primitives.bbn.time_series.SignalDither",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.3.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "flatten_output": {
                    "data": false,
                    "type": "VALUE"
                },
                "frame_length_s": {
                    "data": 0.025,
                    "type": "VALUE"
                },
                "frame_shift_s": {
                    "data": 0.01,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "19da09c3ace416f2974da21fb99c0947ba7724d10c91d9b2ea9b2aa26eab02ea",
                "id": "4d7160ef-ca70-4150-b513-36b90817ba45",
                "name": "Signal Framing",
                "python_path": "d3m.primitives.bbn.time_series.SignalFramer",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.4.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "cep_lifter": {
                    "data": 22.0,
                    "type": "VALUE"
                },
                "frame_mean_norm": {
                    "data": false,
                    "type": "VALUE"
                },
                "nfft": {
                    "data": null,
                    "type": "VALUE"
                },
                "num_ceps": {
                    "data": 12,
                    "type": "VALUE"
                },
                "num_chans": {
                    "data": 20,
                    "type": "VALUE"
                },
                "preemcoef": {
                    "data": null,
                    "type": "VALUE"
                },
                "use_power": {
                    "data": false,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "2e2cb09abb74eed6d9ba97d6e7ea98cd49dc5789fa595e996adeb761abf6cc57",
                "id": "a184a1d1-3187-4d1f-99c6-e1d5665c2c99",
                "name": "MFCC Feature Extraction",
                "python_path": "d3m.primitives.bbn.time_series.SignalMFCC",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.5.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "gmm_covariance_type": {
                    "data": "diag",
                    "type": "VALUE"
                },
                "ivec_dim": {
                    "data": 100,
                    "type": "VALUE"
                },
                "ivec_normalize": {
                    "data": true,
                    "type": "VALUE"
                },
                "max_gmm_iter": {
                    "data": 20,
                    "type": "VALUE"
                },
                "num_gauss": {
                    "data": 32,
                    "type": "VALUE"
                },
                "num_ivec_iter": {
                    "data": 7,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "88663af042c0530b897307954cead6883185d7fd5708acdbfc62335ac2a17d95",
                "id": "1c5080bd-7b2f-4dbb-ac5f-0a65b59526a7",
                "name": "I-vector extractor",
                "python_path": "d3m.primitives.bbn.time_series.IVectorExtractor",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.6.produce",
                    "type": "CONTAINER"
                },
                "outputs": {
                    "data": "steps.0.produce",
                    "type": "CONTAINER"
                }
            },
            "hyperparams": {
                "activation": {
                    "data": "relu",
                    "type": "VALUE"
                },
                "add_index_columns": {
                    "data": true,
                    "type": "VALUE"
                },
                "alpha": {
                    "data": 0.0001,
                    "type": "VALUE"
                },
                "beta_1": {
                    "data": 0.9,
                    "type": "VALUE"
                },
                "beta_2": {
                    "data": 0.999,
                    "type": "VALUE"
                },
                "early_stopping": {
                    "data": true,
                    "type": "VALUE"
                },
                "epsilon": {
                    "data": 1e-08,
                    "type": "VALUE"
                },
                "exclude_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "hidden_layer_sizes": {
                    "data": "gANjY29weXJlZwpfcmVjb25zdHJ1Y3RvcgpxAGNkM20uY29udGFpbmVyLmxpc3QKTGlzdApxAWNidWlsdGlucwpsaXN0CnECXXEDKEvIS8hlh3EEUnEFfXEGWAgAAABtZXRhZGF0YXEHY2QzbS5tZXRhZGF0YS5iYXNlCkRhdGFNZXRhZGF0YQpxCCmBcQl9cQooWBEAAABfY3VycmVudF9tZXRhZGF0YXELY2QzbS5tZXRhZGF0YS5iYXNlCk1ldGFkYXRhRW50cnkKcQwpgXENfXEOKFgIAAAAZWxlbWVudHNxD31xEFgMAAAAYWxsX2VsZW1lbnRzcRFoDCmBcRJ9cRMoaA99cRRoEU5oB2Nmcm96ZW5kaWN0CkZyb3plbk9yZGVyZWREaWN0CnEVKYFxFn1xFyhYBQAAAF9kaWN0cRhjY29sbGVjdGlvbnMKT3JkZXJlZERpY3QKcRkpUnEaWA8AAABzdHJ1Y3R1cmFsX3R5cGVxG2NidWlsdGlucwppbnQKcRxzWAUAAABfaGFzaHEdTnVidWJoB2gVKYFxHn1xHyhoGGgZKVJxIChYBgAAAHNjaGVtYXEhWEIAAABodHRwczovL21ldGFkYXRhLmRhdGFkcml2ZW5kaXNjb3Zlcnkub3JnL3NjaGVtYXMvdjAvY29udGFpbmVyLmpzb25xImgbaAFYCQAAAGRpbWVuc2lvbnEjaBUpgXEkfXElKGgYaBkpUnEmWAYAAABsZW5ndGhxJ0sCc2gdTnVidWgdTnVidWJoHU5YCQAAAGZvcl92YWx1ZXEoaAV1YnNiLg==",
                    "type": "VALUE"
                },
                "learning_rate": {
                    "data": "constant",
                    "type": "VALUE"
                },
                "learning_rate_init": {
                    "data": 0.01,
                    "type": "VALUE"
                },
                "max_iter": {
                    "data": 200,
                    "type": "VALUE"
                },
                "return_result": {
                    "data": "replace",
                    "type": "VALUE"
                },
                "shuffle": {
                    "data": true,
                    "type": "VALUE"
                },
                "solver": {
                    "data": "adam",
                    "type": "VALUE"
                },
                "tol": {
                    "data": 0.0001,
                    "type": "VALUE"
                },
                "use_columns": {
                    "data": [],
                    "type": "VALUE"
                },
                "use_semantic_types": {
                    "data": false,
                    "type": "VALUE"
                },
                "warm_start": {
                    "data": false,
                    "type": "VALUE"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "5fdb649ac458f0d2401b6e312e4ecca01a1fffdfc581b24044864e2c1cdf5143",
                "id": "cdb18166-e2ca-4418-b5a4-fffbe98f7844",
                "name": "BBN MLP Classifier",
                "python_path": "d3m.primitives.bbn.sklearn_wrap.BBNMLPClassifier",
                "version": "0.1.4"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "inputs.0",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "e874f753b62534905e24f0e112e611e0de2894b28eb6f6c034c3fab2e0ad70c5",
                "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "name": "Extract a DataFrame from a Dataset",
                "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        },
        {
            "arguments": {
                "inputs": {
                    "data": "steps.7.produce",
                    "type": "CONTAINER"
                },
                "reference": {
                    "data": "steps.8.produce",
                    "type": "CONTAINER"
                }
            },
            "outputs": [
                {
                    "id": "produce"
                }
            ],
            "primitive": {
                "digest": "413973e313aaf98a066c324174b85ae9ab16ae0e983a964885248766b82c930a",
                "id": "8d38b340-f83f-4877-baaa-162f8e551736",
                "name": "Construct pipeline predictions output",
                "python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
                "version": "0.3.0"
            },
            "type": "PRIMITIVE"
        }
    ]
}
